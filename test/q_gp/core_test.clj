(ns q_gp.core-test
  (:require [clojure.test :refer [deftest is]]
            [q_gp.core :as pushGP]
            [q_gp.qgate :as qgate]
            [clojure.core.matrix :as m]))

(comment
  "Author: Alex Axton
   Description: The following tests validate many of the functions used
   within the files core.clj and qgate.clj that are used for implementing
   my GP system that attempts to create quantum algorithms that solve the
   PF Max problem")

(def default-instructions
  (list
   `qgate_not
   `qgate_haddamard
   `qgate_controlled_z
   `qgate_cnot
   `qgate_swap
   `qgate_toffoli
   `exec_dup
   'close
   0
   1
   2
   3
   0
   1
   2
   3
   0
   1
   2
   3
   0
   1
   2
   3))

;; An empty push state to use for testing
(def empty-push-state
  {:exec '()
   :integer '()
   :qgate '()})

(def testing-push-state
  {:exec '(pushGP/qgate_haddamard pushGP/qgate_cnot)
   :integer '(0 1 2)
   :qgate '()})

; An example Plushy genome
(def q-example-plushy-genome
  '(0 2 pushGP/exec_dup 0 1 pushGP/close pushGP/qgate_cnot 3 2 0 pushGP/qgate_cnot))

;; An example Push program
;; This is the program that would result from the above Plushy genome
(def q-example-push-program
  '(0 2 pushGP/exec_dup 0 1 pushGP/qgate_cnot 3 2 0 pushGP/qgate_cnot))

;; A simple push program for testing a simple qnot operation
(def q-simple-qnot-push-program
  '(0 pushGP/qgate_not))

;; A simple push program for testing a simple haddamard operation
(def q-simple-hadamard-push-program
  '(0 pushGP/qgate_haddamard))

;; A simple push program for testing a simple controlled-z operation
(def q-simple-controlled-z-push-program
  '(0 1 pushGP/qgate_controlled_z))

;; A simple push program for testing a simple controlled-not operation
(def q-simple-cnot-push-program
  '(0 1 pushGP/qgate_cnot))

;; A simple push program for testing a simple swap operation
(def q-simple-swap-push-program
  '(0 1 pushGP/qgate_swap))

;; A simple push program for testing a simple controlled-controlled-not 
;;   (toffoli) operation
(def q-simple-toffoli-push-program
  '(0 1 2 pushGP/qgate_toffoli))


;; QGATE TESTS

(deftest log2-test
  (is (= (qgate/log2 4) 2)))

(deftest length-n-vec-test
  (is (= (qgate/length-n-vec 10) (m/array (take 10 (repeat 0))))))

(deftest basis-vec-test
  (is (= (qgate/basis-vec 10 0) (m/array [1 0 0 0 0 0 0 0 0 0])))
  (is (= (qgate/basis-vec 0 0) (m/array [1]))))

(deftest get-row-matrices-test
  (is (= (qgate/get-row-matrices [(m/identity-matrix 4) (m/identity-matrix 4) (m/identity-matrix 4) (m/identity-matrix 4)] 2) 
         [[(m/identity-matrix 4) (m/identity-matrix 4)] [(m/identity-matrix 4) (m/identity-matrix 4)]])))

(deftest join-matrix-rows-test
  (is (= (qgate/join-matrix-rows (m/identity-matrix 2) (m/identity-matrix 2)) 
         (m/matrix [[1.0 0.0 1.0 0.0] [0.0 1.0 0.0 1.0]]))))

(deftest join-matrix-cols-test
  (is (= (qgate/join-matrix-cols (m/identity-matrix 2) (m/identity-matrix 2)) 
         (m/matrix [[1.0 0.0] [0.0 1.0] [1.0 0.0] [0.0 1.0]]))))

(deftest tensor-product-test
  (is (= (qgate/tensor-product qgate/i-gate qgate/cnot-gate) 
         (m/matrix [[1 0 0 0 0 0 0 0]
                    [0 1 0 0 0 0 0 0]
                    [0 0 0 1 0 0 0 0]
                    [0 0 1 0 0 0 0 0]
                    [0 0 0 0 1 0 0 0]
                    [0 0 0 0 0 1 0 0]
                    [0 0 0 0 0 0 0 1]
                    [0 0 0 0 0 0 1 0]])))
  (is (= (qgate/tensor-product qgate/i-gate qgate/i-gate) (m/matrix [[1 0 0 0] [0 1 0 0] [0 0 1 0] [0 0 0 1]])))
  (is (= (qgate/tensor-product qgate/toffoli-gate qgate/cnot-gate)
         (m/matrix [[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]]))))

(deftest tensor-product-args-test
  (is (= (qgate/tensor-product-args qgate/i-gate qgate/i-gate qgate/i-gate) 
         (m/matrix [[1 0 0 0 0 0 0 0]
                    [0 1 0 0 0 0 0 0]
                    [0 0 1 0 0 0 0 0]
                    [0 0 0 1 0 0 0 0]
                    [0 0 0 0 1 0 0 0]
                    [0 0 0 0 0 1 0 0]
                    [0 0 0 0 0 0 1 0]
                    [0 0 0 0 0 0 0 1]])))
  (is (= (qgate/tensor-product-args qgate/i-gate qgate/cnot-gate qgate/i-gate) 
         (m/matrix [[1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
                    [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
                    [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
                    [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]])))
  (is (= (m/mul 1.0 (qgate/tensor-product-args qgate/i-gate qgate/i-gate qgate/i-gate qgate/i-gate)) 
         (m/identity-matrix 16))))

(deftest kronecker-product-test
  (is (= (qgate/kronecker-product qgate/spin-up qgate/spin-down) [0 0 1 0]))
  (is (= (qgate/kronecker-product qgate/spin-down qgate/spin-up) [0 1 0 0])))

(deftest kronecker-product-args-test
  (is (= (qgate/kronecker-product-args qgate/spin-up qgate/spin-up qgate/spin-up qgate/spin-up) 
         [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]))
  (is (= (qgate/kronecker-product-args qgate/spin-down qgate/spin-down qgate/spin-down qgate/spin-down) 
         [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]))
  (is (= (qgate/kronecker-product-args qgate/spin-down qgate/spin-down qgate/spin-up qgate/spin-down) 
         [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])))

(deftest int-to-binary-vec-test
  (is (= (qgate/int-to-binary-vec 0 0) []))
  (is (= (qgate/int-to-binary-vec 0 5) [0 0 0 0 0]))
  (is (= (qgate/int-to-binary-vec 1 5) [0 0 0 0 1]))
  (is (= (qgate/int-to-binary-vec 3 5) [0 0 0 1 1])))

(deftest binary-permutations-test
  (is (= (qgate/binary-permutations 4) '([0 0 0 0]
                                         [0 0 0 1]
                                         [0 0 1 0]
                                         [0 0 1 1]
                                         [0 1 0 0]
                                         [0 1 0 1]
                                         [0 1 1 0]
                                         [0 1 1 1]
                                         [1 0 0 0]
                                         [1 0 0 1]
                                         [1 0 1 0]
                                         [1 0 1 1]
                                         [1 1 0 0]
                                         [1 1 0 1]
                                         [1 1 1 0]
                                         [1 1 1 1])))
  (is (= (qgate/binary-permutations 0) '([]))))

(deftest transform-basis-vec-test
  (is (= (qgate/transform-basis-vec [0 1 2 3] [0 1 2 3]) [0 1 2 3]))
  (is (= (qgate/transform-basis-vec [0 1 2 3] [3 2 1 0]) [3 2 1 0]))
  (is (= (qgate/transform-basis-vec [3 2 0 1] [0 2 1 3]) [3 0 2 1])))

(deftest basis-transformation-test
  (is (= (qgate/basis-transformation [0 1 2 3]) '([1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])))
  (is (= (qgate/basis-transformation [3 2 1 0]) '([1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
                                                  [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
                                                  [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
                                                  [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
                                                  [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
                                                  [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
                                                  [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
                                                  [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
                                                  [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]))))

(deftest transform-matrix-test
  (is (= (qgate/transform-matrix (qgate/tensor-product-args qgate/cnot-gate qgate/i-gate qgate/i-gate)
                                 (qgate/basis-transformation [2 0 1 3]))
         (m/matrix [[1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
                    [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]]))))



;; All of the pervious qgate functions can only be tested so much. It is all really in service of
;; creating the function 'translate-qgate-tensor-product' that uses the tensor product and 
;; basis transformations to allow for an arbitrary quantum gate to be applied to arbitrary qubits in
;; an n-qubit system. Although these operations work on n-qubits because my system only uses 4 qubits
;; so the following tests will only be reflective of a 4 qubit system. All of this to say, the below
;; testing is the greatest proof that the previous functions work - they allow for the correct quantum
;; gates to be created.

;; To prove that these operations work I have returned the matrices generated from applying quantum gates
;; to specific qubits in the Python QuTiP library and compared them to what my code generates. Because
;; the QuTiP matrices returned only report values to 8 digits I make use of the episolon parameter in
;; the m/equals function that compares two matrices with some tolerance so that I can prove my matrices
;; agree with the qutip matrices to 8 digits.

;; Hadamard gate applied to qubit 0
(def qutip-h-0 (m/matrix [[0.70710678  0.          0.          0.          0.          0.
                              0.          0.          0.70710678  0.          0.          0.
                              0.          0.          0.          0.]
                             [0.          0.70710678  0.          0.          0.          0.
                              0.          0.          0.          0.70710678  0.          0.
                              0.          0.          0.          0.]
                             [0.          0.          0.70710678  0.          0.          0.
                              0.          0.          0.          0.          0.70710678  0.
                              0.          0.          0.          0.]
                             [0.          0.          0.          0.70710678  0.          0.
                              0.          0.          0.          0.          0.          0.70710678
                              0.          0.          0.          0.]
                             [0.          0.          0.          0.          0.70710678  0.
                              0.          0.          0.          0.          0.          0.
                              0.70710678  0.          0.          0.]
                             [0.          0.          0.          0.          0.          0.70710678
                              0.          0.          0.          0.          0.          0.
                              0.          0.70710678  0.          0.]
                             [0.          0.          0.          0.          0.          0.
                              0.70710678  0.          0.          0.          0.          0.
                              0.          0.          0.70710678  0.]
                             [0.          0.          0.          0.          0.          0.
                              0.          0.70710678  0.          0.          0.          0.
                              0.          0.          0.          0.70710678]
                             [0.70710678  0.          0.          0.          0.          0.
                              0.          0.         -0.70710678  0.          0.          0.
                              0.          0.          0.          0.]
                             [0.          0.70710678  0.          0.          0.          0.
                              0.          0.          0.         -0.70710678  0.          0.
                              0.          0.          0.          0.]
                             [0.          0.          0.70710678  0.          0.          0.
                              0.          0.          0.          0.         -0.70710678  0.
                              0.          0.          0.          0.]
                             [0.          0.          0.          0.70710678  0.          0.
                              0.          0.          0.          0.          0.         -0.70710678
                              0.          0.          0.          0.]
                             [0.          0.          0.          0.          0.70710678  0.
                              0.          0.          0.          0.          0.          0.
                              -0.70710678  0.          0.          0.]
                             [0.          0.          0.          0.          0.          0.70710678
                              0.          0.          0.          0.          0.          0.
                              0.         -0.70710678  0.          0.]
                             [0.          0.          0.          0.          0.          0.
                              0.70710678  0.          0.          0.          0.          0.
                              0.          0.         -0.70710678  0.]
                             [0.          0.          0.          0.          0.          0.
                              0.          0.70710678  0.          0.          0.          0.
                              0.          0.          0.         -0.70710678]]))

;; Hadamard gate applied to qubit 1
(def qutip-h-1 (m/matrix [[0.70710678  0.          0.          0.          0.70710678  0.
                           0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.70710678  0.          0.          0.          0.70710678
                           0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.          0.70710678  0.          0.          0.
                           0.70710678  0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.          0.          0.70710678  0.          0.
                           0.          0.70710678  0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.70710678  0.          0.          0.         -0.70710678  0.
                           0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.70710678  0.          0.          0.         -0.70710678
                           0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.          0.70710678  0.          0.          0.
                           -0.70710678  0.          0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.          0.          0.70710678  0.          0.
                           0.         -0.70710678  0.          0.          0.          0.
                           0.          0.          0.          0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.70710678  0.          0.          0.
                           0.70710678  0.          0.          0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.70710678  0.          0.
                           0.          0.70710678  0.          0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.          0.70710678  0.
                           0.          0.          0.70710678  0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.          0.          0.70710678
                           0.          0.          0.          0.70710678]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.70710678  0.          0.          0.
                           -0.70710678  0.          0.          0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.70710678  0.          0.
                           0.         -0.70710678  0.          0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.          0.70710678  0.
                           0.          0.         -0.70710678  0.]
                          [0.          0.          0.          0.          0.          0.
                           0.          0.          0.          0.          0.          0.70710678
                           0.          0.          0.         -0.70710678]]))

;; Controlled-z gate applied to qubits 0 and 1
(def qutip-cz-01 (m/matrix [[1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.]]))

;; Controlled-z gate applied to qubits 0 and 3
(def qutip-cz-03 (m/matrix [[1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.]]))

;; Controlled-z gate applied to qubits 3 and 0
(def qutip-cz-30 (m/matrix [[1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.  0.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  1.  0.]
                            [0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0.  0. -1.]]))

;; CNOT gate applied to qubits 0 and 1
(def qutip-cnot-01 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]]))

;; CNOT gate applied to qubits 0 and 3
(def qutip-cnot-03 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]]))

;; CNOT gate applied to qubits 2 and 0
(def qutip-cnot-20 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]]))

;; Swap gate applied to qubits 0 and 1
(def qutip-swap-01 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]))

;; Swap gate applied to qubits 0 and 3
(def qutip-swap-03 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]))

;; Swap gate applied to qubits 3 and 1
(def qutip-swap-31 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                              [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]))

;; Toffoli (controlled-controlled-not) gate applied to qubits 0 1 and 2
(def qutip-toffoli-012 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]]))

;; Toffoli (controlled-controlled-not) gate applied to qubits 0 2 and 3
(def qutip-toffoli-023 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]]))

;; Toffoli (controlled-controlled-not) gate applied to qubits 2 3 and 0
(def qutip-toffoli-230 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]]))

;; Toffoli (controlled-controlled-not) gate applied to qubits 3 0 and 1
(def qutip-toffoli-301 (m/matrix [[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
                                  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]]))

;; The following tests compare the qunatum operator matrices that I create by applying a specific
;; quantum gate to specific qubits in a 4 qubit system. These results are compared with the quantum
;; gates created by the Python QuTiP library when the same gates are applied to the same qubits in
;; a 4 qubit system.
;; The tests demonstrate that any quantum gate can be applied to any qubit in any order.
(deftest translate-qgate-tensor-product-test
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/haddamard-gate 0) qutip-h-0 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/haddamard-gate 1) qutip-h-1 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/controlled-z-gate 0 1) qutip-cz-01 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/controlled-z-gate 0 3) qutip-cz-03 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/controlled-z-gate 3 0) qutip-cz-30 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/cnot-gate 0 1) qutip-cnot-01 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/cnot-gate 0 3) qutip-cnot-03 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/cnot-gate 2 0) qutip-cnot-20 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/swap-gate 0 1) qutip-swap-01 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/swap-gate 0 3) qutip-swap-03 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/swap-gate 3 1) qutip-swap-31 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/toffoli-gate 0 1 2) qutip-toffoli-012 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/toffoli-gate 0 2 3) qutip-toffoli-023 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/toffoli-gate 2 3 0) qutip-toffoli-230 0.00000001))
  (is (m/equals (qgate/translate-qgate-tensor-product qgate/toffoli-gate 3 0 1) qutip-toffoli-301 0.00000001)))


;; GP TESTING

(deftest push-to-stack-test
  (is (= (pushGP/push-to-stack empty-push-state :integer 1) {:exec '(), :integer '(1), :qgate '()})))

(deftest pop-stack-test
  (is (= (pushGP/pop-stack testing-push-state :integer) {:exec '(pushGP/qgate_haddamard pushGP/qgate_cnot), :integer '(1 2) :qgate '()})))

(deftest peek-stack-test
  (is (= (pushGP/peek-stack empty-push-state :integer) :no-stack-item))
  (is (= (pushGP/peek-stack testing-push-state :integer) 0)))

(deftest empty-stack?-test
  (is (= (pushGP/empty-stack? empty-push-state :integer) true))
  (is (= (pushGP/empty-stack? testing-push-state :integer) false))
  (is (= (pushGP/empty-stack? testing-push-state :qgate) true))
  (is (= (pushGP/empty-stack? testing-push-state :exec) false)))

(deftest exec_dup-test
  (is (= (pushGP/exec_dup testing-push-state) {:exec '(pushGP/qgate_haddamard pushGP/qgate_haddamard pushGP/qgate_cnot), :integer '(0 1 2), :qgate '()}))
  (is (= (pushGP/exec_dup empty-push-state) empty-push-state)))

(deftest is-literal?-test
  (is (= (pushGP/is-literal? 1) true))
  (is (= (pushGP/is-literal? 1421908490) true))
  (is (= (pushGP/is-literal? (m/identity-matrix 4)) true))
  (is (= (pushGP/is-literal? :program) false)))

(deftest is-genome?-test
  (is (= (pushGP/is-genome? q-example-plushy-genome) true))
  (is (= (pushGP/is-genome? "not genome") false)))

(deftest item-to-keyword-test
  (is (= (pushGP/item-to-keyword 1) :integer))
  (is (= (pushGP/item-to-keyword q-example-plushy-genome) "Painful error that has taken countless hours of my life.")))

(pushGP/interpret-one-step testing-push-state)
testing-push-state
(deftest interpret-one-step-test
  (is (= (pushGP/interpret-one-step testing-push-state)
         {:exec '(pushGP/qgate_cnot),
          :integer '(1 2),
          :qgate
          '([[0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475]
             [0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475]])})))

(deftest interpret-push-program-test
  (is (= (pushGP/interpret-push-program q-simple-qnot-push-program empty-push-state)
         {:exec '(),
          :integer '(),
          :qgate
          '([[0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0]
             [1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]])}))
  (is (= (pushGP/interpret-push-program q-simple-hadamard-push-program empty-push-state) 
         {:exec '(),
          :integer '(),
          :qgate
          '([[0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475]
             [0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.7071067811865475 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -0.7071067811865475]])}))
  (is (= (pushGP/interpret-push-program q-simple-controlled-z-push-program empty-push-state)
         {:exec '(),
          :integer '(),
          :qgate
          '([[1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -1.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -1.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -1.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 -1.0]])}))
  (is (= (pushGP/interpret-push-program q-simple-cnot-push-program empty-push-state) 
         {:exec '(),
          :integer '(),
          :qgate
          '([[1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]])}))
  (is (= (pushGP/interpret-push-program q-simple-swap-push-program empty-push-state) 
         {:exec '(),
          :integer '(),
          :qgate
          '([[1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0]])}))
  (is (= (pushGP/interpret-push-program q-simple-toffoli-push-program empty-push-state) 
         {:exec '(),
          :integer '(),
          :qgate
          '([[1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0]
             [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 1.0 0.0 0.0]])}))
  (is (= (pushGP/interpret-push-program '() empty-push-state) empty-push-state)))

(deftest make-random-plushy-genome-test
  (is (= (seq? (pushGP/make-random-plushy-genome default-instructions 10)) true)))

(deftest return-end-of-longer-test
  (is (= (pushGP/return-end-of-longer q-simple-toffoli-push-program q-example-push-program) '(1 pushGP/qgate_cnot 3 2 0 pushGP/qgate_cnot))))

;; there is a very very very small chance this will not work if the probabilites work out
;; such that nothing is changed in crossover. I'm willing to bet at least one thing will change
;; I'm also feeding in a program here, not a genome, but the same effect is achieved in testing this.
(deftest crossover-test
  (is (not (= (pushGP/crossover q-simple-toffoli-push-program q-example-push-program) q-simple-toffoli-push-program q-example-push-program))))

;; using example-plushy-genome-long just about gurantees at least one elment will be added
(deftest uniform-addition-test
  (is (> (count (pushGP/uniform-addition q-example-plushy-genome default-instructions)) (count q-example-plushy-genome))))

;; using example-plushy-genome-long just about gurantees at least one elment will be deleted
(deftest uniform-deletion-test
  (is (< (count (pushGP/uniform-deletion q-example-plushy-genome)) (count q-example-plushy-genome))))

(deftest generate-random-population-test
  (is (= (count (pushGP/generate-random-population 100 default-instructions 10)) 100)))